// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                       String        @id @default(cuid())
  name                     String        @default("")
  clerkId                  String        @default("")
  email                    String        @unique @default("")
  role                     String?       @default("USER")
  password                 String
  tags                     Tag[]         @relation("Tag_users")
  orders                   Order[]       @relation("Order_users")
  items                    Item[]        @relation("Item_users")
  listInvitations          Invitation[]  @relation("Invitation_user")
  createdAt                DateTime?     @default(now())
  permissions              String?       @default("ALL")
  configuration            String?       @default("{}")
  updatedAt                DateTime?     @updatedAt
  from_Cluster_users       Cluster[]     @relation("Cluster_users")
  from_Item_lastModifiedBy Item[]        @relation("Item_lastModifiedBy")
  from_Integration_user    Integration[] @relation("Integration_user")
}

model Cluster {
  id          String       @id @default(cuid())
  name        String       @default("")
  description String       @default("")
  users       User[]       @relation("Cluster_users")
  lists       List[]       @relation("Cluster_lists")
  invitations Invitation[] @relation("Cluster_invitations")
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
}

model List {
  id          String       @id @default(cuid())
  name        String       @default("")
  description String       @default("")
  tags        Tag[]        @relation("List_tags")
  clusters    Cluster[]    @relation("Cluster_lists")
  items       Item[]       @relation("Item_lists")
  invitations Invitation[] @relation("Invitation_lists")
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
}

model Item {
  id               String    @id @default(cuid())
  name             String    @default("")
  description      String    @default("")
  category         String    @default("")
  quantity         Int?      @default(0)
  cost             Float?
  price            Float?
  reorderLevel     Int?      @default(0)
  unit             String    @default("")
  sku              String    @default("")
  barcode          String    @default("")
  supplier         String    @default("")
  leadTime         Int?
  attributes       String?   @default("{}")
  status           String?   @default("ACTIVE")
  users            User[]    @relation("Item_users")
  orders           Order[]   @relation("Item_orders")
  isHidden         Boolean   @default(false)
  lists            List[]    @relation("Item_lists")
  lastModifiedBy   User?     @relation("Item_lastModifiedBy", fields: [lastModifiedById], references: [id])
  lastModifiedById String?   @map("lastModifiedBy")
  tags             Tag[]     @relation("Item_tags")
  itemTags         ItemTag[] @relation("ItemTag_item")
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt

  @@index([lastModifiedById])
}

model Invitation {
  id        String    @id @default(cuid())
  email     String    @default("")
  status    String?   @default("PENDING")
  token     String    @unique @default("")
  lists     List[]    @relation("Invitation_lists")
  clusters  Cluster[] @relation("Cluster_invitations")
  user      User?     @relation("Invitation_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@index([userId])
}

model Order {
  id          String    @id @default(cuid())
  orderNumber String    @default("")
  status      String?   @default("PENDING")
  users       User[]    @relation("Order_users")
  items       Item[]    @relation("Item_orders")
  source      String    @default("")
  amount      Int?
  currency    String    @default("")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}

model Integration {
  id              String    @id @default(cuid())
  user            User?     @relation("Integration_user", fields: [userId], references: [id])
  userId          String?   @map("user")
  integrationType String    @default("")
  storeUrl        String    @default("")
  apiKey          String    @default("")
  shopId          String    @default("")
  status          String?   @default("PENDING")
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt

  @@index([userId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  users User[] @relation("Tag_users")
  lists List[] @relation("List_tags")
  items Item[] @relation("Item_tags")
}

model ItemTag {
  id     String  @id @default(cuid())
  name   String  @default("")
  item   Item?   @relation("ItemTag_item", fields: [itemId], references: [id])
  itemId String? @map("item")

  @@index([itemId])
}
