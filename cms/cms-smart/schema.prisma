// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                            String        @id @default(cuid())
  firstName                     String        @default("")
  lastName                      String        @default("")
  phoneNumbers                  String        @default("")
  clerkId                       String        @unique @default("")
  email                         String        @unique @default("")
  role                          String?       @default("USER")
  password                      String
  tags                          Tag[]         @relation("Tag_users")
  orders                        Order[]       @relation("Order_users")
  items                         Inventory[]   @relation("Inventory_users")
  lists                         List[]        @relation("List_users")
  products                      Product[]     @relation("Product_users")
  listInvitations               Invitation[]  @relation("Invitation_user")
  createdAt                     DateTime?     @default(now())
  permissions                   String?       @default("ALL")
  configuration                 String?       @default("{}")
  updatedAt                     DateTime?     @updatedAt
  from_Cluster_users            Cluster[]     @relation("Cluster_users")
  from_Product_lastModifiedBy   Product[]     @relation("Product_lastModifiedBy")
  from_Inventory_lastModifiedBy Inventory[]   @relation("Inventory_lastModifiedBy")
  from_Integration_user         Integration[] @relation("Integration_user")
}

model Cluster {
  id          String       @id @default(cuid())
  name        String       @default("")
  description String       @default("")
  users       User[]       @relation("Cluster_users")
  lists       List[]       @relation("Cluster_lists")
  invitations Invitation[] @relation("Cluster_invitations")
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
}

model List {
  id          String       @id @default(cuid())
  name        String       @default("")
  description String       @default("")
  tags        Tag[]        @relation("List_tags")
  clusters    Cluster[]    @relation("Cluster_lists")
  invitations Invitation[] @relation("Invitation_lists")
  users       User[]       @relation("List_users")
  products    Product[]    @relation("List_products")
  items       Inventory[]  @relation("Inventory_lists")
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
}

model Product {
  id               String      @id @default(cuid())
  name             String      @default("")
  description      String      @default("")
  category         String      @default("")
  sku              String      @default("")
  barcode          String      @default("")
  attributes       String?     @default("{}")
  cost             Float?
  price            Float?
  taxRate          Float?      @default(0)
  reorderLevel     Int?        @default(0)
  unit             String      @default("pcs")
  quantity         Int?        @default(0)
  supplier         String      @default("")
  leadTime         Int?
  status           String?     @default("ACTIVE")
  isHidden         Boolean     @default(false)
  users            User[]      @relation("Product_users")
  orders           Order[]     @relation("Order_products")
  lists            List[]      @relation("List_products")
  tags             Tag[]       @relation("Product_tags")
  items            Inventory[] @relation("Inventory_products")
  lastModifiedBy   User?       @relation("Product_lastModifiedBy", fields: [lastModifiedById], references: [id])
  lastModifiedById String?     @map("lastModifiedBy")
  createdAt        DateTime?   @default(now())
  updatedAt        DateTime?   @updatedAt

  @@index([lastModifiedById])
}

model Inventory {
  id               String    @id @default(cuid())
  products         Product[] @relation("Inventory_products")
  batchNumber      String    @default("")
  sku              String    @unique @default("")
  quantity         Int?      @default(0)
  location         String    @default("")
  expiryDate       DateTime?
  receivedDate     DateTime? @default(now())
  purchasePrice    Float?
  salePrice        Float?
  status           String?   @default("IN_STOCK")
  supplier         String    @default("")
  isReserved       Boolean   @default(false)
  isDamaged        Boolean   @default(false)
  users            User[]    @relation("Inventory_users")
  lists            List[]    @relation("Inventory_lists")
  tags             Tag[]     @relation("Inventory_tags")
  itemTags         ItemTag[] @relation("Inventory_itemTags")
  orders           Order[]   @relation("Inventory_orders")
  lastModifiedBy   User?     @relation("Inventory_lastModifiedBy", fields: [lastModifiedById], references: [id])
  lastModifiedById String?   @map("lastModifiedBy")
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt

  @@index([lastModifiedById])
}

model Invitation {
  id        String    @id @default(cuid())
  email     String    @default("")
  status    String?   @default("PENDING")
  token     String    @unique @default("")
  lists     List[]    @relation("Invitation_lists")
  clusters  Cluster[] @relation("Cluster_invitations")
  user      User?     @relation("Invitation_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@index([userId])
}

model Order {
  id          String      @id @default(cuid())
  orderNumber String      @default("")
  status      String?     @default("PENDING")
  users       User[]      @relation("Order_users")
  products    Product[]   @relation("Order_products")
  items       Inventory[] @relation("Inventory_orders")
  source      String      @default("")
  amount      Int?
  currency    String      @default("")
  createdAt   DateTime?   @default(now())
  updatedAt   DateTime?   @updatedAt
}

model Integration {
  id              String    @id @default(cuid())
  user            User?     @relation("Integration_user", fields: [userId], references: [id])
  userId          String?   @map("user")
  integrationType String    @default("")
  storeUrl        String    @default("")
  apiKey          String    @default("")
  shopId          String    @default("")
  status          String?   @default("PENDING")
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt

  @@index([userId])
}

model Tag {
  id       String      @id @default(cuid())
  name     String      @default("")
  users    User[]      @relation("Tag_users")
  lists    List[]      @relation("List_tags")
  items    Inventory[] @relation("Inventory_tags")
  products Product[]   @relation("Product_tags")
}

model ItemTag {
  id    String      @id @default(cuid())
  name  String      @default("")
  items Inventory[] @relation("Inventory_itemTags")
}
