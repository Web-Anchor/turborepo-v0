{
  "version": 3,
  "sources": ["../keystone.ts", "../src/keystone/schema.ts"],
  "sourcesContent": ["import { config } from '@keystone-6/core';\nimport { statelessSessions } from '@keystone-6/core/session';\nimport { createAuth } from '@keystone-6/auth';\nimport { lists } from './src/keystone/schema';\n\n// Authentication configuration\nconst { withAuth } = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n  secretField: 'password',\n  sessionData: 'id name',\n  initFirstItem: {\n    fields: ['name', 'email', 'password'],\n  },\n});\n\n// Define session secret min 32 characters long\nconst sessionSecret =\n  process.env.SESSION_SECRET || Math.pow(32, 2).toString(36).substring(2, 34);\n\n// Session configuration\nconst session = statelessSessions({\n  secret: sessionSecret,\n  maxAge: 60 * 60 * 24 * 30, // 30 days\n});\n\n// Keystone configuration\nexport default withAuth(\n  config({\n    db: {\n      provider: 'sqlite',\n      url: `file:${process.cwd()}/keystone.db`,\n    },\n    lists,\n    session,\n    // Optional: Set to false to disable Admin UI\n    ui: {\n      // basePath: '/admin',\n      isDisabled: true, // Disable Admin UI. Next JS do not support it\n    },\n    // Server configuration\n    server: {\n      cors: {\n        origin: ['http://localhost:3000'],\n        credentials: true,\n      },\n      port: 3001,\n    },\n  })\n);\n", "import { list } from '@keystone-6/core';\nimport { allowAll } from '@keystone-6/core/access';\nimport {\n  text,\n  password,\n  relationship,\n  timestamp,\n} from '@keystone-6/core/fields';\n\nexport const lists = {\n  User: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      email: text({\n        validation: { isRequired: true },\n        isIndexed: 'unique',\n      }),\n      password: password({ validation: { isRequired: true } }),\n      posts: relationship({ ref: 'Post.author', many: true }),\n      createdAt: timestamp({\n        defaultValue: { kind: 'now' },\n      }),\n    },\n  }),\n  Post: list({\n    access: allowAll,\n    fields: {\n      title: text({ validation: { isRequired: true } }),\n      content: text({\n        ui: {\n          displayMode: 'textarea',\n        },\n      }),\n      author: relationship({\n        ref: 'User.posts',\n        many: false,\n      }),\n      createdAt: timestamp({\n        defaultValue: { kind: 'now' },\n      }),\n    },\n  }),\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,eAAuB;AACvB,qBAAkC;AAClC,kBAA2B;;;ACF3B,kBAAqB;AACrB,oBAAyB;AACzB,oBAKO;AAEA,IAAM,QAAQ;AAAA,EACnB,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,UAAM,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAC/C,WAAO,oBAAK;AAAA,QACV,YAAY,EAAE,YAAY,KAAK;AAAA,QAC/B,WAAW;AAAA,MACb,CAAC;AAAA,MACD,cAAU,wBAAS,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MACvD,WAAO,4BAAa,EAAE,KAAK,eAAe,MAAM,KAAK,CAAC;AAAA,MACtD,eAAW,yBAAU;AAAA,QACnB,cAAc,EAAE,MAAM,MAAM;AAAA,MAC9B,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAAA,EACD,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,WAAO,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAChD,aAAS,oBAAK;AAAA,QACZ,IAAI;AAAA,UACF,aAAa;AAAA,QACf;AAAA,MACF,CAAC;AAAA,MACD,YAAQ,4BAAa;AAAA,QACnB,KAAK;AAAA,QACL,MAAM;AAAA,MACR,CAAC;AAAA,MACD,eAAW,yBAAU;AAAA,QACnB,cAAc,EAAE,MAAM,MAAM;AAAA,MAC9B,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;;;ADrCA,IAAM,EAAE,SAAS,QAAI,wBAAW;AAAA,EAC9B,SAAS;AAAA,EACT,eAAe;AAAA,EACf,aAAa;AAAA,EACb,aAAa;AAAA,EACb,eAAe;AAAA,IACb,QAAQ,CAAC,QAAQ,SAAS,UAAU;AAAA,EACtC;AACF,CAAC;AAGD,IAAM,gBACJ,QAAQ,IAAI,kBAAkB,KAAK,IAAI,IAAI,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AAG5E,IAAM,cAAU,kCAAkB;AAAA,EAChC,QAAQ;AAAA,EACR,QAAQ,KAAK,KAAK,KAAK;AAAA;AACzB,CAAC;AAGD,IAAO,mBAAQ;AAAA,MACb,qBAAO;AAAA,IACL,IAAI;AAAA,MACF,UAAU;AAAA,MACV,KAAK,QAAQ,QAAQ,IAAI,CAAC;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA,IAAI;AAAA;AAAA,MAEF,YAAY;AAAA;AAAA,IACd;AAAA;AAAA,IAEA,QAAQ;AAAA,MACN,MAAM;AAAA,QACJ,QAAQ,CAAC,uBAAuB;AAAA,QAChC,aAAa;AAAA,MACf;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACH;",
  "names": ["import_core"]
}
